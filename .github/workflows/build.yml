name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: [1.21]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Verify dependencies
      run: go mod download

    - name: Build for Windows
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        Write-Host "🔨 Building Chaos Monkey for Windows..."
        go build -v -o chaos-monkey-windows-amd64.exe main.go test_pods.go chaos_types.go version.go
        if ($LASTEXITCODE -ne 0) {
            Write-Host "❌ Windows build failed!" -ForegroundColor Red
            exit 1
        }
        Write-Host "✅ Windows build completed" -ForegroundColor Green

    - name: Build for Linux
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: |
        echo "🔨 Building Chaos Monkey for Linux..."
        go build -v -o chaos-monkey-linux-amd64 main.go test_pods.go chaos_types.go version.go
        if [ $? -ne 0 ]; then
            echo "❌ Linux build failed!"
            exit 1
        fi
        echo "✅ Linux build completed"

    - name: Build for macOS
      if: matrix.os == 'macos-latest'
      shell: bash
      run: |
        echo "🔨 Building Chaos Monkey for macOS..."
        go build -v -o chaos-monkey-darwin-amd64 main.go test_pods.go chaos_types.go version.go
        if [ $? -ne 0 ]; then
            echo "❌ macOS build failed!"
            exit 1
        fi
        echo "✅ macOS build completed"

    - name: Create checksums for Windows
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        Write-Host "Creating Windows checksums..."
        $hash = Get-FileHash -Path "chaos-monkey-windows-amd64.exe" -Algorithm SHA256
        $hash.Hash | Out-File -FilePath "checksums-windows.txt" -Encoding ASCII
        Write-Host "Checksum: $($hash.Hash)"

    - name: Create checksums for Linux
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: |
        echo "Creating Linux checksums..."
        shasum -a 256 chaos-monkey-linux-amd64 > checksums-linux.txt
        echo "Checksums:"
        cat checksums-linux.txt

    - name: Create checksums for macOS
      if: matrix.os == 'macos-latest'
      shell: bash
      run: |
        echo "Creating macOS checksums..."
        shasum -a 256 chaos-monkey-darwin-amd64 > checksums-macos.txt
        echo "Checksums:"
        cat checksums-macos.txt

    - name: List build artifacts
      shell: bash
      run: |
        echo "Build artifacts:"
        ls -la chaos-monkey-* checksums-*.txt || true

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: chaos-monkey-${{ matrix.os }}
        path: |
          chaos-monkey-*
          checksums-*.txt

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: List downloaded artifacts
      shell: bash
      run: |
        echo "Downloaded artifacts:"
        find . -name "chaos-monkey-*" -o -name "checksums-*.txt" | sort

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          **/chaos-monkey-windows-amd64.exe
          **/chaos-monkey-linux-amd64
          **/chaos-monkey-darwin-amd64
          **/checksums-*.txt
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 